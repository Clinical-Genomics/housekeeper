#!/bin/bash
#SBATCH -t 24:00:00
#SBATCH -c 2
#SBATCH -A prod001
#SBATCH -J gpg_test
#SBATCH --output=/mnt/hds/proj/bioinfo/LOG/gpg-test-%j.out
#SBATCH --error=/mnt/hds/proj/bioinfo/LOG/gpg-test-%j.err
#SBATCH --mail-type=ALL
#SBATCH --mail-user=kenny.billiau@scilifelab.se

set -e
set -o pipefail
shopt -s expand_aliases
source ~/.bashrc

#############
# FUNCTIONS #
#############

log() {
    NOW=$(date +"%Y%m%d%H%M%S")
    >&2 echo "[${NOW}] $@"
}

finish() {
    if [[ ! -z "${PASSPHRASEFILE}" && -f ${PASSPHRASEFILE} ]]; then
        rm ${PASSPHRASEFILE}
    fi
    if [[ -f ${OUTDIR}/${COMPILATION}.sha1sum ]]; then
        rm ${OUTDIR}/${COMPILATION}.sha1sum
    fi
    if [[ -f ${OUTDIR}/${COMPILATION}.degpg.sha1sum ]]; then
        rm ${OUTDIR}/${COMPILATION}.degpg.sha1sum
    fi
}
trap finish ERR EXIT

########
# VARS #
########

INFILE=$1
OUTDIR=$2

INDIR=$(dirname ${INFILE})
COMPILATION=$(basename ${INFILE})
read -srp "Passphrase: " PASSPHRASE # TODO: remove passphrase from key

########
# MAIN #
########

cd ${INDIR}

# get the checksum
ORI_SHA1=$(housekeeper getsha1 --dash ${INFILE})

# GPG
log "gpg -e -r 'Kenny Billiau' --yes -o ${OUTDIR}/${COMPILATION}.gpg ${INFILE}"
     gpg -e -r 'Kenny Billiau' --yes -o ${OUTDIR}/${COMPILATION}.gpg ${INFILE}

# decrypt to make sure encryption went fine
log "gpg --batch --passphrase -d ${OUTDIR}/${COMPILATION}.gpg | sha1sum"
DECRYPT_SHA1=$(gpg --batch --passphrase "${PASSPHRASE}" -d ${OUTDIR}/${COMPILATION}.gpg | sha1sum)

if [[ ${DECRYPT_SHA1} != $ORI_SHA1 ]]; then
    ( >&2 echo "ERROR: ${OUTDIR}/${COMPILATION}.gpg ENCRYPTION FAIL" )
    exit 1
fi

############
# CLEAN UP #
############

echo ${OUTDIR}/${COMPILATION}.gpg

cd - > /dev/null
log "Finished"
